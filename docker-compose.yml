services:
  
  caddy:
    container_name: caddy
    image: caddy:2-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/data:/data
      - ./caddy/config:/config
    restart: unless-stopped
  
  redis:
    container_name: redis
    image: redis:7-alpine
    restart: on-failure
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - redis-data:/data
    command: >
     redis-server /usr/local/etc/redis/redis.conf
     --requirepass ${REDIS_PASSWORD}
  
  postgres:
    container_name: postgres
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_MULTIPLE_DBS=${POSTGRES_MULTIPLE_DBS}
    volumes:
      - ./postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - postgres-data:/var/lib/postgresql/data
  
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.3.0
    volumes:
      - ./keycloak:/opt/keycloak/data/import 
      - keycloak-data:/opt/keycloak/data
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KC_ADMIN_USERNAME}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KC_ADMIN_PASSWORD}
      - KC_DB=${KC_DB}
      - KC_DB_URL_HOST=${KC_DB_URL_HOST}
      - KC_DB_URL_DATABASE=${KC_DB_URL_DATABASE}
      - KC_DB_USERNAME=${POSTGRES_USER}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD}
      - KC_DB_SCHEMA=${KC_DB_SCHEMA}
      - KC_HOSTNAME=${KC_HOSTNAME}
      - KC_HOSTNAME_ADMIN=${KC_HOSTNAME_ADMIN}
      - KC_HTTP_ENABLED=${KC_HTTP_ENABLED}
      - KC_PROXY_HEADERS=${KC_PROXY_HEADERS}
    command:
      - start
      - --import-realm
    restart: unless-stopped
    depends_on:
      - postgres

  backend:
    container_name: backend
    build: ./backend
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
      - keycloak
  
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - VITE_KEYCLOAK_ACCOUNT_URL=${VITE_KEYCLOAK_ACCOUNT_URL}
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - frontend-node-modules:/app/node_modules
    depends_on:
      - backend

volumes:
  redis-data:
  keycloak-data:
  postgres-data:
  frontend-node-modules: